---
// Claims Probability Calculator Component
const riskFactors = {
  auto: {
    age: {
      '16-19': 1.8,
      '20-24': 1.5,
      '25-34': 1.2,
      '35-54': 1.0,
      '55-64': 0.9,
      '65+': 1.1
    },
    experience: {
      '0-2': 1.4,
      '3-5': 1.2,
      '6-10': 1.0,
      '11-20': 0.9,
      '21+': 0.8
    },
    mileage: {
      '0-5000': 0.8,
      '5000-10000': 1.0,
      '10000-15000': 1.2,
      '15000-20000': 1.4,
      '20000+': 1.6
    },
    violations: {
      '0': 1.0,
      '1': 1.3,
      '2': 1.6,
      '3+': 2.0
    }
  },
  home: {
    age: {
      '0-10': 0.8,
      '11-20': 1.0,
      '21-30': 1.2,
      '31-50': 1.4,
      '51+': 1.8
    },
    value: {
      '0-200k': 0.9,
      '200k-400k': 1.0,
      '400k-600k': 1.1,
      '600k-1m': 1.3,
      '1m+': 1.5
    },
    location: {
      'rural': 0.8,
      'suburban': 1.0,
      'urban': 1.3,
      'high-risk': 1.8
    },
    safety: {
      'excellent': 0.7,
      'good': 0.9,
      'average': 1.0,
      'poor': 1.3
    }
  }
};

const baseProbabilities = {
  auto: 0.12, // 12% chance per year
  home: 0.05  // 5% chance per year
};
---

<div class="bg-white dark:bg-gray-900 rounded-xl border shadow-lg p-6">
  <div class="mb-6">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
      Claims Probability Calculator
    </h2>
    <p class="text-gray-600 dark:text-gray-400">
      Estimate your likelihood of filing an insurance claim based on risk factors
    </p>
  </div>

  <!-- Insurance Type Selector -->
  <div class="mb-6">
    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
      Insurance Type
    </label>
    <div class="grid grid-cols-2 gap-3">
      <button class="type-btn px-4 py-3 border rounded-lg text-center font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500" data-type="auto">
        <div class="text-lg">üöó</div>
        <div>Auto Insurance</div>
      </button>
      <button class="type-btn px-4 py-3 border rounded-lg text-center font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500" data-type="home">
        <div class="text-lg">üè†</div>
        <div>Home Insurance</div>
      </button>
    </div>
  </div>

  <!-- Auto Factors -->
  <div id="auto-factors" class="factors-section hidden">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Auto Insurance Risk Factors</h3>
    <div class="grid md:grid-cols-2 gap-6">
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Driver Age
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="age">
          <option value="">Select age range</option>
          <option value="16-19">16-19 years</option>
          <option value="20-24">20-24 years</option>
          <option value="25-34">25-34 years</option>
          <option value="35-54">35-54 years</option>
          <option value="55-64">55-64 years</option>
          <option value="65+">65+ years</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Driving Experience
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="experience">
          <option value="">Select experience</option>
          <option value="0-2">0-2 years</option>
          <option value="3-5">3-5 years</option>
          <option value="6-10">6-10 years</option>
          <option value="11-20">11-20 years</option>
          <option value="21+">21+ years</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Annual Mileage
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="mileage">
          <option value="">Select mileage</option>
          <option value="0-5000">0-5,000 miles</option>
          <option value="5000-10000">5,000-10,000 miles</option>
          <option value="10000-15000">10,000-15,000 miles</option>
          <option value="15000-20000">15,000-20,000 miles</option>
          <option value="20000+">20,000+ miles</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Traffic Violations (Last 3 Years)
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="violations">
          <option value="">Select violations</option>
          <option value="0">No violations</option>
          <option value="1">1 violation</option>
          <option value="2">2 violations</option>
          <option value="3+">3+ violations</option>
        </select>
      </div>
    </div>
  </div>

  <!-- Home Factors -->
  <div id="home-factors" class="factors-section hidden">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Home Insurance Risk Factors</h3>
    <div class="grid md:grid-cols-2 gap-6">
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Home Age
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="age">
          <option value="">Select home age</option>
          <option value="0-10">0-10 years</option>
          <option value="11-20">11-20 years</option>
          <option value="21-30">21-30 years</option>
          <option value="31-50">31-50 years</option>
          <option value="51+">51+ years</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Home Value
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="value">
          <option value="">Select home value</option>
          <option value="0-200k">$0-$200,000</option>
          <option value="200k-400k">$200,000-$400,000</option>
          <option value="400k-600k">$400,000-$600,000</option>
          <option value="600k-1m">$600,000-$1,000,000</option>
          <option value="1m+">$1,000,000+</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Location Type
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="location">
          <option value="">Select location</option>
          <option value="rural">Rural area</option>
          <option value="suburban">Suburban area</option>
          <option value="urban">Urban area</option>
          <option value="high-risk">High-risk area</option>
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Safety Features
        </label>
        <select class="factor-select w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" data-factor="safety">
          <option value="">Select safety level</option>
          <option value="excellent">Excellent (alarm, sprinklers, etc.)</option>
          <option value="good">Good (smoke detectors, deadbolts)</option>
          <option value="average">Average (basic safety)</option>
          <option value="poor">Poor (minimal safety)</option>
        </select>
      </div>
    </div>
  </div>

  <!-- Calculate Button -->
  <div class="mt-8">
    <button id="calculate-btn" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed">
      Calculate Claim Probability
    </button>
  </div>

  <!-- Results -->
  <div id="results" class="mt-8 hidden">
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg p-6">
      <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-4">Your Claim Probability</h3>
      
      <div class="grid md:grid-cols-3 gap-6 mb-6">
        <div class="text-center">
          <div class="text-3xl font-bold text-blue-600" id="annual-probability">-</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Annual probability</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-green-600" id="five-year-probability">-</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">5-year probability</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-orange-600" id="risk-level">-</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Risk level</div>
        </div>
      </div>

      <!-- Risk Breakdown -->
      <div id="risk-breakdown" class="mb-6">
        <h4 class="font-semibold text-gray-900 dark:text-white mb-3">Risk Factor Breakdown</h4>
        <div id="factor-list" class="space-y-2"></div>
      </div>

      <!-- Recommendations -->
      <div id="recommendations">
        <h4 class="font-semibold text-gray-900 dark:text-white mb-3">Recommendations</h4>
        <ul id="recommendation-list" class="space-y-2 text-sm text-gray-600 dark:text-gray-400"></ul>
      </div>
    </div>
  </div>

  <!-- Disclaimer -->
  <div class="mt-6 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
    <p class="text-xs text-gray-600 dark:text-gray-400">
      <strong>Disclaimer:</strong> This calculator provides estimates based on statistical data and should not be considered as a guarantee or prediction of actual claims. 
      Individual circumstances vary greatly, and actual claim probability depends on many factors not captured in this simplified model. 
      For accurate risk assessment, consult with licensed insurance professionals.
    </p>
  </div>
</div>

<script define:vars={{ riskFactors, baseProbabilities }}>
document.addEventListener('DOMContentLoaded', function() {
  const typeButtons = document.querySelectorAll('.type-btn');
  const factorsSections = document.querySelectorAll('.factors-section');
  const calculateBtn = document.getElementById('calculate-btn');
  const results = document.getElementById('results');
  const factorSelects = document.querySelectorAll('.factor-select');
  
  let currentType = '';
  let selectedFactors = {};

  // Type selection
  typeButtons.forEach(btn => {
    btn.addEventListener('click', function() {
      // Update active state
      typeButtons.forEach(b => {
        b.classList.remove('bg-blue-50', 'border-blue-500', 'text-blue-700');
        b.classList.add('border-gray-300', 'text-gray-700');
      });
      this.classList.remove('border-gray-300', 'text-gray-700');
      this.classList.add('bg-blue-50', 'border-blue-500', 'text-blue-700');
      
      currentType = this.dataset.type;
      
      // Show relevant factors section
      factorsSections.forEach(section => section.classList.add('hidden'));
      document.getElementById(`${currentType}-factors`).classList.remove('hidden');
      
      // Reset selections
      selectedFactors = {};
      factorSelects.forEach(select => select.value = '');
      results.classList.add('hidden');
      
      updateCalculateButton();
    });
  });

  // Factor selection
  factorSelects.forEach(select => {
    select.addEventListener('change', function() {
      if (currentType) {
        selectedFactors[this.dataset.factor] = this.value;
        updateCalculateButton();
      }
    });
  });

  function updateCalculateButton() {
    const requiredFactors = Object.keys(riskFactors[currentType] || {});
    const selectedCount = Object.keys(selectedFactors).filter(key => selectedFactors[key]).length;
    
    calculateBtn.disabled = !currentType || selectedCount < requiredFactors.length;
  }

  // Calculate probability
  calculateBtn.addEventListener('click', function() {
    if (!currentType || Object.keys(selectedFactors).length === 0) return;
    
    const baseProb = baseProbabilities[currentType];
    let multiplier = 1;
    const factorBreakdown = [];
    
    // Calculate risk multiplier
    Object.entries(selectedFactors).forEach(([factor, value]) => {
      if (value && riskFactors[currentType][factor] && riskFactors[currentType][factor][value]) {
        const factorMultiplier = riskFactors[currentType][factor][value];
        multiplier *= factorMultiplier;
        
        let impact = 'neutral';
        let impactColor = 'text-gray-600';
        if (factorMultiplier > 1.2) {
          impact = 'increases risk';
          impactColor = 'text-red-600';
        } else if (factorMultiplier < 0.9) {
          impact = 'decreases risk';
          impactColor = 'text-green-600';
        }
        
        factorBreakdown.push({
          factor: factor.charAt(0).toUpperCase() + factor.slice(1),
          value: value,
          multiplier: factorMultiplier,
          impact: impact,
          color: impactColor
        });
      }
    });
    
    const annualProb = Math.min(baseProb * multiplier, 0.95); // Cap at 95%
    const fiveYearProb = 1 - Math.pow(1 - annualProb, 5);
    
    // Determine risk level
    let riskLevel, riskColor;
    if (annualProb < 0.05) {
      riskLevel = 'Low';
      riskColor = 'text-green-600';
    } else if (annualProb < 0.15) {
      riskLevel = 'Moderate';
      riskColor = 'text-yellow-600';
    } else if (annualProb < 0.25) {
      riskLevel = 'High';
      riskColor = 'text-orange-600';
    } else {
      riskLevel = 'Very High';
      riskColor = 'text-red-600';
    }
    
    // Update results
    document.getElementById('annual-probability').textContent = `${(annualProb * 100).toFixed(1)}%`;
    document.getElementById('five-year-probability').textContent = `${(fiveYearProb * 100).toFixed(1)}%`;
    const riskLevelEl = document.getElementById('risk-level');
    riskLevelEl.textContent = riskLevel;
    riskLevelEl.className = `text-3xl font-bold ${riskColor}`;
    
    // Update factor breakdown
    const factorList = document.getElementById('factor-list');
    factorList.innerHTML = factorBreakdown.map(factor => 
      `<div class="flex justify-between items-center">
        <span class="text-sm">${factor.factor}: ${factor.value}</span>
        <span class="text-sm ${factor.color}">${factor.multiplier}x (${factor.impact})</span>
      </div>`
    ).join('');
    
    // Generate recommendations
    const recommendations = generateRecommendations(currentType, selectedFactors, annualProb);
    const recommendationList = document.getElementById('recommendation-list');
    recommendationList.innerHTML = recommendations.map(rec => 
      `<li class="flex items-start">
        <span class="text-green-500 mr-2 mt-0.5">‚Ä¢</span>
        <span>${rec}</span>
      </li>`
    ).join('');
    
    results.classList.remove('hidden');
  });

  function generateRecommendations(type, factors, probability) {
    const recommendations = [];
    
    if (type === 'auto') {
      if (factors.violations && factors.violations !== '0') {
        recommendations.push('Consider taking a defensive driving course to improve your record');
      }
      if (factors.mileage && (factors.mileage === '15000-20000' || factors.mileage === '20000+')) {
        recommendations.push('Look into usage-based insurance programs if you drive mainly for work');
      }
      if (factors.age && (factors.age === '16-19' || factors.age === '20-24')) {
        recommendations.push('Consider adding safety features to your vehicle and maintaining good grades for discounts');
      }
      recommendations.push('Shop around for quotes - rates can vary significantly between insurers');
      recommendations.push('Consider higher deductibles to lower premiums if you have an emergency fund');
    } else if (type === 'home') {
      if (factors.safety && (factors.safety === 'average' || factors.safety === 'poor')) {
        recommendations.push('Install security systems, smoke detectors, and deadbolts to reduce risk and premiums');
      }
      if (factors.age && (factors.age === '31-50' || factors.age === '51+')) {
        recommendations.push('Consider updating electrical, plumbing, and HVAC systems to reduce claim risk');
      }
      if (factors.location === 'high-risk') {
        recommendations.push('Look into mitigation strategies specific to your area (flood barriers, earthquake retrofitting, etc.)');
      }
      recommendations.push('Bundle home and auto insurance for potential discounts');
      recommendations.push('Review your coverage annually to ensure adequate protection');
    }
    
    if (probability > 0.2) {
      recommendations.push('Consider building a larger emergency fund to handle potential claims');
      recommendations.push('Review your deductible - higher deductibles can significantly lower premiums');
    }
    
    return recommendations;
  }
});
</script>

<style>
  .type-btn:hover {
    background-color: theme('colors.blue.50');
    border-color: theme('colors.blue.300');
  }
  
  .dark .type-btn:hover {
    background-color: theme('colors.blue.900/20');
    border-color: theme('colors.blue.600');
  }
  
  .factor-select:focus {
    box-shadow: 0 0 0 2px theme('colors.blue.500/20');
  }
</style>
