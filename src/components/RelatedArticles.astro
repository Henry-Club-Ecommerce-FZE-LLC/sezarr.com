---
import { getCollection } from 'astro:content';

interface Props {
  currentSlug: string;
  currentCategory: string;
  className?: string;
  maxItems?: number;
}

const { currentSlug, currentCategory, className = '', maxItems = 6 } = Astro.props;

const allPosts = await getCollection('posts');

// Filter out current post and get posts from same category first
const sameCategoryPosts = allPosts.filter(post => 
  post.slug !== currentSlug && post.data.category === currentCategory
);

// Get posts from related categories (you can customize this logic)
const relatedCategories: Record<string, string[]> = {
  'auto': ['business', 'travel'],
  'business': ['auto', 'disability'],
  'health': ['disability', 'life'],
  'homeowners': ['business', 'travel'],
  'life': ['health', 'disability'],
  'travel': ['auto', 'homeowners'],
  'pets': ['health', 'life'],
  'disability': ['health', 'life', 'business']
};

const relatedCategoryPosts = allPosts.filter(post => 
  post.slug !== currentSlug && 
  post.data.category !== currentCategory &&
  relatedCategories[currentCategory]?.includes(post.data.category)
);

// Combine and sort by publication date
const allRelatedPosts = [...sameCategoryPosts, ...relatedCategoryPosts]
  .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
  .slice(0, maxItems);

// Category info for display
const categoryInfo: Record<string, { name: string; icon: string }> = {
  'auto': { name: 'Auto Insurance', icon: '🚗' },
  'business': { name: 'Business Insurance', icon: '🏢' },
  'health': { name: 'Health Insurance', icon: '🏥' },
  'homeowners': { name: 'Home Insurance', icon: '🏠' },
  'life': { name: 'Life Insurance', icon: '💰' },
  'travel': { name: 'Travel Insurance', icon: '✈️' },
  'pets': { name: 'Pet Insurance', icon: '🐕' },
  'disability': { name: 'Disability Insurance', icon: '🦽' }
};

function formatDate(date: Date): string {
  return new Date(date).toLocaleDateString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  });
}
---

{allRelatedPosts.length > 0 && (
  <aside class={`related-articles-section ${className}`}>
    <div class="bg-gray-50 dark:bg-gray-800/50 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
      <div class="flex items-center gap-3 mb-6">
        <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center">
          <svg class="w-4 h-4 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
          </svg>
        </div>
        <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100">
          Related Articles
        </h2>
        <span class="text-sm text-gray-500 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded-full">
          {allRelatedPosts.length}
        </span>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {allRelatedPosts.map((post) => {
          const categoryData = categoryInfo[post.data.category] || { name: post.data.category, icon: '📄' };
          const isFromSameCategory = post.data.category === currentCategory;
          
          return (
            <article class="group bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-200 hover:shadow-md">
              <a href={`/${post.data.category}/${post.slug}/`} class="block p-4 h-full">
                <!-- Category Badge -->
                <div class="flex items-center gap-2 mb-3">
                  <span class="text-lg" role="img" aria-label={categoryData.name}>
                    {categoryData.icon}
                  </span>
                  <span class={`text-xs font-medium px-2 py-1 rounded-full ${
                    isFromSameCategory 
                      ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300' 
                      : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400'
                  }`}>
                    {categoryData.name}
                  </span>
                  {isFromSameCategory && (
                    <span class="text-xs text-blue-600 dark:text-blue-400 font-medium">
                      Same Category
                    </span>
                  )}
                </div>

                <!-- Title -->
                <h3 class="font-semibold text-gray-900 dark:text-gray-100 mb-2 line-clamp-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                  {post.data.title}
                </h3>

                <!-- Description -->
                <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-3 leading-relaxed">
                  {post.data.description}
                </p>

                <!-- Footer -->
                <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-500 mt-auto pt-2 border-t border-gray-100 dark:border-gray-700">
                  <time datetime={post.data.pubDate.toISOString()}>
                    {formatDate(post.data.pubDate)}
                  </time>
                  <span class="inline-flex items-center gap-1 text-blue-600 dark:text-blue-400 group-hover:gap-2 transition-all">
                    Read more
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                  </span>
                </div>
              </a>
            </article>
          );
        })}
      </div>

      <!-- View More Link -->
      <div class="mt-6 text-center">
        <a 
          href={`/blog/${currentCategory}/`}
          class="inline-flex items-center gap-2 text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium transition-colors group"
        >
          <span>View all {categoryInfo[currentCategory]?.name || currentCategory} articles</span>
          <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
          </svg>
        </a>
      </div>
    </div>
  </aside>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>