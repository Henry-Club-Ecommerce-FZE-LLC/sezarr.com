---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const posts = (await getCollection('posts')).sort((a,b) => 
  (b.data.pubDate?.getTime?.() || 0) - (a.data.pubDate?.getTime?.() || 0)
);

// Get categories with post counts
const categories = [...new Set(posts.map(post => post.data.category))];
const categoryInfo = {
  'auto': { 
    name: 'Auto Insurance', 
    description: 'Car insurance guides and coverage advice',
    icon: '🚗'
  },
  'business': { 
    name: 'Business Insurance', 
    description: 'Protect your business with proper coverage',
    icon: '🏢'
  },
  'health': { 
    name: 'Health Insurance', 
    description: 'Healthcare coverage and plan guidance',
    icon: '🏥'
  },
  'homeowners': { 
    name: 'Home Insurance', 
    description: 'Protect your home and belongings',
    icon: '🏠'
  },
  'life': { 
    name: 'Life Insurance', 
    description: 'Secure your family\'s financial future',
    icon: '💰'
  },
  'travel': { 
    name: 'Travel Insurance', 
    description: 'Stay protected while traveling',
    icon: '✈️'
  },
  'pets': { 
    name: 'Pet Insurance', 
    description: 'Keep your pets healthy and protected',
    icon: '🐕'
  },
  'disability': { 
    name: 'Disability Insurance', 
    description: 'Protect your income and livelihood',
    icon: '🦽'
  }
};

const categoriesWithCounts = categories.map(cat => ({
  slug: cat,
  ...categoryInfo[cat],
  count: posts.filter(post => post.data.category === cat).length
})).sort((a, b) => a.name.localeCompare(b.name));

const recentPosts = posts.slice(0, 6);

const title = "Insurance Blog - Expert Guides & Articles";
const description = "Expert insurance guides, tips, and advice. Learn about auto, health, home, life, and business insurance from industry professionals.";
const url = "https://www.sezarr.com/blog/";
---

<BaseLayout {title} {description} {url}>
  <div class="mx-auto max-w-6xl px-4 py-8">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        Insurance Blog
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Expert guides, tips, and advice to help you make informed insurance decisions
      </p>
    </div>

    <!-- Categories Grid -->
    <div class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-8 text-center">
        Browse by Category
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {categoriesWithCounts.map(category => (
          <a 
            href={`/blog/${category.slug}/`}
            class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all group"
          >
            <div class="text-center">
              <div class="text-4xl mb-3">{category.icon}</div>
              <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                {category.name}
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">
                {category.description}
              </p>
              <span class="text-xs text-gray-500 dark:text-gray-500">
                {category.count} article{category.count !== 1 ? 's' : ''}
              </span>
            </div>
          </a>
        ))}
      </div>
    </div>

    <!-- Recent Articles -->
    <div>
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100">
          Recent Articles
        </h2>
        <a 
          href="/posts/" 
          class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium transition-colors"
        >
          View All →
        </a>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {recentPosts.map(post => {
          const formattedDate = new Date(post.data.pubDate).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          });
          
          const categoryData = categoryInfo[post.data.category];
          
          return (
            <article class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 hover:shadow-lg transition-shadow">
              <div class="flex items-center mb-3">
                <span class="text-2xl mr-2">{categoryData?.icon || '📄'}</span>
                <span class="text-sm text-gray-600 dark:text-gray-400 capitalize">
                  {categoryData?.name || post.data.category}
                </span>
              </div>
              
              <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2">
                <a 
                  href={`/posts/${post.slug}/`}
                  class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                >
                  {post.data.title}
                </a>
              </h3>
              
              <p class="text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-3">
                {post.data.description}
              </p>
              
              <div class="flex items-center justify-between">
                <time 
                  datetime={post.data.pubDate.toISOString()}
                  class="text-xs text-gray-500 dark:text-gray-500"
                >
                  {formattedDate}
                </time>
                
                <a 
                  href={`/posts/${post.slug}/`}
                  class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 text-sm font-medium transition-colors"
                >
                  Read More →
                </a>
              </div>
            </article>
          );
        })}
      </div>
    </div>
  </div>
</BaseLayout>